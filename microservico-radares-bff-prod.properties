server.port=8081

# Endere\u00E7o do Elasticsearch
elasticsearch.host=localhost
elasticsearch.port=9200

spring.rabbitmq.host=rabbitmq-central
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}

# Cache simples
spring.cache.type=simple

# --- RESILIENCE4J CIRCUIT BREAKER CONFIGURATION ---

# Configuração de tempo limite para chamadas reativas
resilience4j.timelimiter.instances.default.timeout-duration=4s

# Configuração padrão do Circuit Breaker
resilience4j.circuitbreaker.instances.default.register-health-indicator=true
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.default.sliding-window-size=10
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=3

# Configuração específica para o serviço de busca de radares (mais tolerante)
resilience4j.circuitbreaker.instances.radaresService.base-config=default
resilience4j.circuitbreaker.instances.radaresService.sliding-window-size=20

# Configuração específica para o serviço de monitoramento
resilience4j.circuitbreaker.instances.monitoramentoService.base-config=default

# Aponta para os NOMES DE SERVI\u00C7O dos seus outros microsservi\u00E7os na rede Docker
# Garanta que os nomes aqui (ex: 'microservico-radar-cart') sejam os mesmos
# definidos nos seus respectivos arquivos docker-compose.yml.
# microservico.cart.url=http://microservico-radar-cart:8085
# microservico.eixo.url=http://microservico-radar-eixo:8086
# microservico.entrevias.url=http://microservico-radar-entrevias:8087
# microservico.monitoramento.url=http://microservico-monitoramento:8089
# microservico.rondon.url=http://microservico-radar-rondon:8088